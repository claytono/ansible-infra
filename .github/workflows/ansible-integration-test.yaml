---
name: Ansible Integration Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ansible-integration-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4

    - name: Check for Ansible-related changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          ansible:
            - 'ansible/**'
            - 'flake.nix'
            - 'flake.lock'
            - 'Dockerfile.ansible'
            - '.github/workflows/ansible-integration-test.yaml'

    - name: Set up Docker Buildx
      if: steps.changes.outputs.ansible == 'true'
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3
      with:
        install: true

    - name: Cache Docker layers
      if: steps.changes.outputs.ansible == 'true'
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Write vault password file
      if: steps.changes.outputs.ansible == 'true'
      run: echo "$ANSIBLE_VAULT_PASSWORD" > ansible/ansible-vault-password
      env:
        ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

    - name: Run Ansible integration test
      if: steps.changes.outputs.ansible == 'true'
      run: |-
        docker build --load \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --build-arg VCS_REF=$(git rev-parse --short HEAD) \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new \
          -t ansible-integration-test \
          -f Dockerfile.ansible .
        ansible/scripts/docker-integration-test
